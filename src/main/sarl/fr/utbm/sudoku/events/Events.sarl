/** 
 * 
 */
package fr.utbm.sudoku.events

import fr.utbm.sudoku.controllers.GridController
import fr.utbm.sudoku.model.Algorithms
import fr.utbm.sudoku.model.RegionTypeEnum
import fr.utbm.sudoku.model.Sudoku
import io.sarl.lang.core.EventSpace
import java.util.List
import java.util.UUID

/** 
 * @author Cl√©ment Bareth-Desgranges <clement.bareth@gmail.com>
 * 
 */
event Exit

event SubmitSudoku {
	var sudoku : Sudoku
}

event EcoValue {
	var value : Integer
	var x : Integer
	var y : Integer
}

event SpawnRequired {
	var controller : GridController
}

event EcoResolve{
	var init : boolean
}

event ReadyForEcoResolve

event Aggression{
	var value : Integer
	var x : Integer
	var y : Integer
}

event TokenReceived 

event TokenReleased{
	var done : boolean
}

event RegionAgentInitialized {
	var id : UUID
	var type : RegionTypeEnum
}

event RegionAgentSpawned {
	var contextId : UUID
	var num : Integer
	var ^space : EventSpace
	var Id : UUID
	var type : RegionTypeEnum
}

event Position {
	var pos : Integer
	var id : UUID
	var type : RegionTypeEnum
	
	new (p : Integer, uuid : UUID, t : RegionTypeEnum){
		pos = p 
		id = uuid
		type = t
	}
}

event SolutionFound{
	var solution : Integer
	var x : Integer
	var y : Integer
}

event StopResolve

event NewSolutionFound {
	var solution : Integer
	var x : Integer
	var y : Integer
}

event SeekNudeSingletons

event RowAndColSpawned

event RowAndColInit

event RowInitialized{
	var id : UUID
}

event ColInitialized {
	var id : UUID
}

event SolutionFoundInBloc {
	var solution : Integer
	var x : Integer
	var y : Integer
}

event UpdateSudoku {
	var solution : Integer
	var x : Integer
	var y : Integer
}

event ReadyToResolve

event Resolve{
	var values : List<Integer>
	var algos : List<Algorithms>
}

event Algos {
	var algos : List<Algorithms>
}

event Values{
	var values : List<Integer>
	var type : RegionTypeEnum
}

event AskForCandidate{
	
	new (v : Integer, t : RegionTypeEnum){
		value = v;
		type = t;
	}
	
	var value : Integer
	var type : RegionTypeEnum
}

event AnswerForCandidate {
	var answer : boolean
	var value : Integer
	var type : RegionTypeEnum
	var id : UUID
	var x : Integer
	var y : Integer
}
